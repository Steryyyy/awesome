local table=table;local pairs=pairs;local type=type;local a=math.floor;local b=require("gears.table")local c=require("wibox.widget.base")local d={}function d:layout(e,f,g)local h={}local i=self._private.spacing or 0;local j=0;local k=self._private.dir=="y"and g or f;local l;if self._private.expand~="inside"and self._private.second then local m,n=c.fit_widget(self,e,self._private.second,f,g)l=self._private.dir=="y"and n or m;if l>=k then return{c.place_widget_at(self._private.second,0,0,f,g)}else k=a((k-l)/2)end end;if self._private.first then local m,n,o=f,g,nil;if self._private.expand~="outside"then if self._private.dir=="y"then o,n=c.fit_widget(self,e,self._private.first,f,k)j=n;if self._private.expand=="inside"or not self._private.second then k=k-n end else m,o=c.fit_widget(self,e,self._private.first,k,g)j=m;if self._private.expand=="inside"or not self._private.second then k=k-m end end else if self._private.dir=="y"then n=k else m=k end end;table.insert(h,c.place_widget_at(self._private.first,0,0,m,n))end;if self._private.third and k>0 then local m,n,o=f,g,nil;if self._private.expand~="outside"then if self._private.dir=="y"then o,n=c.fit_widget(self,e,self._private.third,f,k)if self._private.expand=="inside"then k=k-n end else m,o=c.fit_widget(self,e,self._private.third,k,g)if self._private.expand=="inside"then k=k-m end end else if self._private.dir=="y"then n=k else m=k end end;local p,q=f-m,g-n;table.insert(h,c.place_widget_at(self._private.third,p+i,q,m-i,n))end;if self._private.second and k>0 then local p,q,m,n=0,0,f,g;if self._private.expand=="inside"then if self._private.dir=="y"then n=k;p,q=0,j else m=k;p,q=j,0 end else local o;if self._private.dir=="y"then o,n=c.fit_widget(self,e,self._private.second,f,l)q=a((g-n)/2)else m,o=c.fit_widget(self,e,self._private.second,l,g)p=a((f-m)/2)end end;table.insert(h,c.place_widget_at(self._private.second,p+i,q,m-i,n))end;return h end;function d:set_first(r)if self._private.first==r then return end;self._private.first=r;self:emit_signal("widget::layout_changed")self:emit_signal("property::first",r)end;function d:set_spacing(s)self._private.spacing=s;self:emit_signal("widget::layout_changed")end;function d:set_second(r)if self._private.second==r then return end;self._private.second=r;self:emit_signal("widget::layout_changed")self:emit_signal("property::second",r)end;function d:set_third(r)if self._private.third==r then return end;self._private.third=r;self:emit_signal("widget::layout_changed")self:emit_signal("property::third",r)end;for o,t in ipairs{"first","second","third","expand"}do d["get_"..t]=function(self)return self._private[t]end end;function d:get_children()return b.from_sparse{self._private.first,self._private.second,self._private.third}end;function d:set_children(u)self:set_first(u[1])self:set_second(u[2])self:set_third(u[3])end;function d:fit(e,v,w)local x=0;local y=0;for o,z in pairs{self._private.first,self._private.second,self._private.third}do local m,n=c.fit_widget(self,e,z,v,w)local A=self._private.dir=="y"and m or n;if A>y then y=A end;x=x+(self._private.dir=="y"and n or m)end;if self._private.dir=="y"then return y,x end;return x,y end;function d:set_expand(B)if B=="none"or B=="outside"then self._private.expand=B else self._private.expand="inside"end;self:emit_signal("widget::layout_changed")self:emit_signal("property::expand",B)end;function d:reset()for o,z in pairs({"first","second","third"})do self[z]=nil end;self:emit_signal("widget::layout_changed")end;local function C(D,E,F,G)local H=c.make_widget(nil,nil,{enable_properties=true})H._private.dir=D;for I,z in pairs(d)do if type(z)=="function"then rawset(H,I,z)end end;H:set_expand("inside")H:set_first(E)H:set_second(F)H:set_third(G)H.allow_empty_widget=true;return H end;function d.horizontal(J,K,L)local H=C("x",J,K,L)rawset(H,"set_left",H.set_first)rawset(H,"set_middle",H.set_second)rawset(H,"set_right",H.set_third)return H end;function d.vertical(M,K,N)local H=C("y",M,K,N)rawset(H,"set_top",H.set_first)rawset(H,"set_middle",H.set_second)rawset(H,"set_bottom",H.set_third)return H end;return d
