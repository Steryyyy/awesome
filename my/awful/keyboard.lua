local a={root=root,awesome=awesome,client=client}local b={}local c=nil;local function d()if c then return c end;local e=a.awesome._modifiers;assert(e)c={}for f,g in pairs(e)do for h,i in ipairs(g)do assert(i.keysym)c[f]=c[f]or i.keysym;c[i.keysym]=f end end;return c end;a.awesome.connect_signal("xkb::map_changed",function()c=nil end)function b.emulate_key_combination(j,k)local l=d()local m=a.awesome._active_modifiers;for h,n in ipairs(m)do assert(l[n])a.root.fake_input("key_release",l[n])end;for h,o in ipairs(j)do local n=l[o]if n then a.root.fake_input("key_press",n)end end;a.root.fake_input("key_press",k)a.root.fake_input("key_release",k)for h,o in ipairs(j)do local n=l[o]if n then a.root.fake_input("key_release",n)end end;for h,n in ipairs(m)do a.root.fake_input("key_press",l[n])end end;function b.append_global_keybinding(k)a.root._append_key(k)end;function b.append_global_keybindings(p)local q=p.group;p.group=nil;if q then for h,r in ipairs(p)do r.group=q end end;a.root._append_keys(p)p.group=q end;function b.remove_global_keybinding(k)a.root._remove_key(k)end;local s={}function b.append_client_keybinding(k)table.insert(s,k)for h,t in ipairs(a.client.get(nil,false))do t:append_keybinding(k)end;a.client.emit_signal("client_keybinding::added",k)end;function b.append_client_keybindings(p)for h,k in ipairs(p)do b.append_client_keybinding(k)end end;function b.remove_client_keybinding(k)for r,o in ipairs(s)do if k==o then table.remove(s,r)for h,t in ipairs(a.client.get(nil,false))do t:remove_keybinding(k)end;return true end end;return false end;function b.get_key_name(k)return a.awesome._get_key_name(k)end;a.client.connect_signal("scanning",function()a.client.emit_signal("request::default_keybindings","context")end)function b._get_client_keybindings()return s end;return b
