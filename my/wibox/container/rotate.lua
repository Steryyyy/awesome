local error=error;local a=math.pi;local setmetatable=setmetatable;local tostring=tostring;local b=require("my.wibox.widget.base")local c=require("my.gears.matrix")local d=require("my.gears.table")local e={mt={}}local function f(g,h,i)local j=g:get_direction()if j=="east"or j=="west"then return i,h end;return h,i end;function e:layout(k,h,i)if not self._private.widget or not self._private.widget._private.visible then return end;local j=self:get_direction()local l=c.identity;if j=="west"then l=l:rotate(a/2)l=l:translate(0,-h)elseif j=="south"then l=l:rotate(a)l=l:translate(-h,-i)elseif j=="east"then l=l:rotate(3*a/2)l=l:translate(-i,0)end;return{b.place_widget_via_matrix(self._private.widget,l,f(self,h,i))}end;function e:fit(m,h,i)if not self._private.widget then return 0,0 end;return f(self,b.fit_widget(self,m,self._private.widget,f(self,h,i)))end;e.set_widget=b.set_widget_common;function e:get_widget()return self._private.widget end;function e:get_children()return{self._private.widget}end;function e:set_children(n)self:set_widget(n[1])end;function e:reset()self._private.direction=nil;self:set_widget(nil)end;function e:set_direction(j)local o={north=true,east=true,south=true,west=true}if not o[j]then error("Invalid direction for rotate layout: "..tostring(j))end;self._private.direction=j;self:emit_signal("widget::layout_changed")self:emit_signal("property::direction")end;function e:get_direction()return self._private.direction or"north"end;local function p(q,j)local r=b.make_widget(nil,nil,{enable_properties=true})d.crush(r,e,true)r:set_widget(q)r:set_direction(j or"north")return r end;function e.mt:__call(...)return p(...)end;return setmetatable(e,e.mt)