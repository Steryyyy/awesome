local a=require("lgi")local b=a.cairo;local c=require("my.wibox.widget.base")local d=require("my.gears.surface")local e=require("my.gears.table")local f=require("my.gears.debug")local setmetatable=setmetatable;local type=type;local math=math;local unpack=unpack or table.unpack;local g=nil;do local h,i=pcall(function()g=a.Rsvg end)if not h then f.print_warning(debug.traceback("Could not load Rsvg: "..tostring(i)))end end;local j={mt={}}local k=setmetatable({},{__mode='v'})local function l(m)if not g then return end;local n=k[m]if n then return n end;local o,i=g.Handle.new_from_file(m)if not i then k[m]=o;return o end end;function j:draw(p,q,r,s)if r==0 or s==0 or not self._private.default then return end;if self._private.clip_shape then q:clip(self._private.clip_shape(q,r,s,unpack(self._private.clip_args)))end;if not self._private.resize_forbidden then local t,u=self._private.default.width,self._private.default.height;local v=math.min(r/t,s/u)q:scale(v,v)end;if self._private.handle then self._private.handle:render_cairo(q)else q:set_source_surface(self._private.image,0,0)q:paint()end end;function j:fit(p,r,s)if not self._private.default then return 0,0 end;local t,u=self._private.default.width,self._private.default.height;if not self._private.resize_forbidden or t>r or u>s then local v=math.min(r/t,s/u)return t*v,u*v end;return t,u end;local function w(x,y)local z=y.width>0 and y.height>0;if not z then return end;x._private.default={width=y.width,height=y.height}x._private.handle=nil;x._private.image=y;return true end;local function A(x,o)local B=o:get_dimensions()local C=B.width>0 and B.height>0;if not C then return end;x._private.default={width=B.width,height=B.height}x._private.handle=o;x._private.image=nil;return true end;local function D(x,m,E,F)local G;local H=E(m)if H then G=F(x,H)end;return G end;function j:set_image(I)local J;if type(I)=="userdata"then I=d.load(I)end;if type(I)=="string"then J=D(self,I,l,A)if not J then J=D(self,I,d.load,w)end elseif g and g.Handle:is_type_of(I)then J=A(self,I)elseif b.Surface:is_type_of(I)then J=w(self,I)elseif not I then J=true;self._private.handle=nil;self._private.image=nil;self._private.default=nil end;if not J then return false end;self:emit_signal("widget::redraw_needed")self:emit_signal("widget::layout_changed")self:emit_signal("property::image")return true end;function j:set_clip_shape(K,...)self._private.clip_shape=K;self._private.clip_args={...}self:emit_signal("widget::redraw_needed")self:emit_signal("property::clip_shape",K)end;function j:set_resize(L)self._private.resize_forbidden=not L;self:emit_signal("widget::redraw_needed")self:emit_signal("widget::layout_changed")self:emit_signal("property::resize",L)end;local function M(I,N,K,...)local O=c.make_widget(nil,nil,{enable_properties=true})e.crush(O,j,true)if I then O:set_image(I)end;if N~=nil then O:set_resize(N)end;O._private.clip_shape=K;O._private.clip_args={...}return O end;function j.mt:__call(...)return M(...)end;return setmetatable(j,j.mt)