local a=require("lgi").cairo;local b={}local c={}function b.create(d,e,f,g,h,i)return setmetatable({xx=d,xy=f,x0=h,yx=e,yy=g,y0=i},c)end;function b.create_translate(j,k)return b.create(1,0,0,1,j,k)end;function b.create_scale(l,m)return b.create(l,0,0,m,0,0)end;function b.create_rotate(n)local o,p=math.cos(n),math.sin(n)return b.create(o,p,-p,o,0,0)end;function b.create_rotate_at(j,k,n)return b.create_translate(-j,-k)*b.create_rotate(n)*b.create_translate(j,k)end;function b:translate(j,k)return b.create_translate(j,k):multiply(self)end;function b:scale(l,m)return b.create_scale(l,m):multiply(self)end;function b:rotate(n)return b.create_rotate(n):multiply(self)end;function b:rotate_at(j,k,n)return self*b.create_rotate_at(j,k,n)end;function b:invert()local q,r,o,s,h,i=self.xx,self.yx,self.xy,self.yy,self.x0,self.y0;local t=1/(q*s-r*o)return b.create(t*s,t*-r,t*-o,t*q,t*(o*i-s*h),t*(r*h-q*i))end;function b:multiply(u)local v=b.create(self.xx*u.xx+self.yx*u.xy,self.xx*u.yx+self.yx*u.yy,self.xy*u.xx+self.yy*u.xy,self.xy*u.yx+self.yy*u.yy,self.x0*u.xx+self.y0*u.xy+u.x0,self.x0*u.yx+self.y0*u.yy+u.y0)return v end;function b:equals(u)for w,x in pairs{"xx","xy","yx","yy","x0","y0"}do if self[x]~=u[x]then return false end end;return true end;function b:tostring()return string.format("[[%g, %g], [%g, %g], [%g, %g]]",self.xx,self.yx,self.xy,self.yy,self.x0,self.y0)end;function b:transform_distance(j,k)return self.xx*j+self.xy*k,self.yx*j+self.yy*k end;function b:transform_point(j,k)j,k=self:transform_distance(j,k)return self.x0+j,self.y0+k end;function b:transform_rectangle(j,k,y,z)local A,B=self:transform_point(j,k)local C,D=self:transform_point(j,k+z)local E,F=self:transform_point(j+y,k+z)local G,H=self:transform_point(j+y,k)j=math.min(A,C,E,G)k=math.min(B,D,F,H)y=math.max(A,C,E,G)-j;z=math.max(B,D,F,H)-k;return j,k,y,z end;function b:to_cairo_matrix()local v=a.Matrix()v:init(self.xx,self.yx,self.xy,self.yy,self.x0,self.y0)return v end;function b.from_cairo_matrix(I)return b.create(I.xx,I.yx,I.xy,I.yy,I.x0,I.y0)end;c.__index=b;c.__newindex=error;c.__eq=b.equals;c.__mul=b.multiply;c.__tostring=b.tostring;b.identity=b.create(1,0,0,1,0,0)return b