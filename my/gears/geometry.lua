local math=math;local a={geometry={rectangle={}}}function a.geometry.rectangle.get_square_distance(b,c,d)local e,f=0,0;if c<b.x then e=b.x-c elseif c>=b.x+b.width then e=c-b.x-b.width+1 end;if d<b.y then f=b.y-d elseif d>=b.y+b.height then f=d-b.y-b.height+1 end;return e*e+f*f end;function a.geometry.rectangle.get_closest_by_coord(g,c,d)local h=math.huge;local i=nil;for j,k in pairs(g)do local l=a.geometry.rectangle.get_square_distance(k,c,d)if l<h then i,h=j,l end end;return i end;function a.geometry.rectangle.get_by_coord(g,c,d)for j,m in pairs(g)do if c>=m.x and c<m.x+m.width and d>=m.y and d<m.y+m.height then return j end end end;local function n(o,p,q)if o=="up"then return p.y>q.y elseif o=="down"then return p.y<q.y elseif o=="left"then return p.x>q.x elseif o=="right"then return p.x<q.x end;return false end;local function r(o,s,t)local u=s.x;local v=s.y;local w=t.x;local x=t.y;if o=="up"then x=t.y+t.height elseif o=="down"then v=s.y+s.height elseif o=="left"then w=t.x+t.width elseif o=="right"then u=s.x+s.width end;return math.sqrt((w-u)^2+(x-v)^2)end;function a.geometry.rectangle.get_in_direction(o,y,z)local h,A;local B=nil;for C,D in pairs(y)do if n(o,z,D)then h=r(o,z,D)if not B or h<A then B=C;A=h end end end;return B end;function a.geometry.rectangle.are_equal(E,F)for G,k in ipairs{"x","y","width","height"}do if E[k]~=F[k]then return false end end;return true end;function a.geometry.rectangle.is_inside(E,F)return E.x>=F.x and E.y>=F.y and E.x+E.width<=F.x+F.width and E.y+E.height<=F.y+F.height end;function a.geometry.rectangle.area_intersect_area(E,F)return F.x<E.x+E.width and F.x+F.width>E.x and F.y<E.y+E.height and F.y+F.height>E.y end;function a.geometry.rectangle.get_intersection(E,F)local H={}H.x=math.max(E.x,F.x)H.y=math.max(E.y,F.y)H.width=math.min(E.x+E.width,F.x+F.width)-H.x;H.height=math.min(E.y+E.height,F.y+F.height)-H.y;if H.width<=0 or H.height<=0 then H.width,H.height=0,0 end;return H end;function a.geometry.rectangle.area_remove(I,J)for C=#I,1,-1 do if a.geometry.rectangle.area_intersect_area(I[C],J)then local K=table.remove(I,C)local L=a.geometry.rectangle.get_intersection(K,J)if L.x>K.x then table.insert(I,{x=K.x,y=K.y,width=L.x-K.x,height=K.height})end;if L.y>K.y then table.insert(I,{x=K.x,y=K.y,width=K.width,height=L.y-K.y})end;if L.x+L.width<K.x+K.width then table.insert(I,{x=L.x+L.width,y=K.y,width=K.x+K.width-(L.x+L.width),height=K.height})end;if L.y+L.height<K.y+K.height then table.insert(I,{x=K.x,y=L.y+L.height,width=K.width,height=K.y+K.height-(L.y+L.height)})end end end;return I end;return a.geometry