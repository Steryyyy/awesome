local setmetatable=setmetatable;local string=string;local table=table;local unpack=unpack or table.unpack;local tonumber=tonumber;local ipairs=ipairs;local pairs=pairs;local type=type;local a=require("lgi")local b=a.cairo;local c=a.Pango;local d=require("my.gears.surface")local e={mt={}}local f;function e.parse_color(g)local h={}if string.match(g,"^#%x+$")then local i=g:sub(2,#g)local j;if#i%3==0 then j=3 elseif#i%4==0 then j=4 else return nil end;local k=#i/j;if k>4 then return nil end;local l=0x10^k-1;for m=1,#i,k do local n=tonumber(i:sub(m,m+k-1),16)table.insert(h,n/l)end;if j==3 then table.insert(h,1)end else local o=c.Color()if not o:parse(g)then return nil end;h={o.red/0xffff,o.green/0xffff,o.blue/0xffff,1.0}end;assert(#h==4,g)return unpack(h)end;local function p(q)local r={}for s in string.gmatch(q,"-?[0-9]+[.]?[0-9]*")do table.insert(r,tonumber(s))end;return unpack(r)end;function e.create_solid_pattern(g)if g==nil then g="#000000"elseif type(g)=="table"then g=g.color end;return b.Pattern.create_rgba(e.parse_color(g))end;function e.create_png_pattern(t)if type(t)=="table"then t=t.file end;local u=d.load(t)local v=b.Pattern.create_for_surface(u)v:set_extend(b.Extend.REPEAT)return v end;local function w(x,y)for s in y do local z=string.gmatch(s,"[^,]+")local A,B=z(),z()x:add_color_stop_rgba(A,e.parse_color(B))end end;local function C(D,E)for F,G in ipairs(E)do D:add_color_stop_rgba(G[1],e.parse_color(G[2]))end end;local function H(I,E)local y=string.gmatch(E,"[^:]+")local J={p(y())}local K={p(y())}for F,L in pairs(K)do table.insert(J,L)end;local x=I(unpack(J))w(x,y)return x end;function e.create_linear_pattern(E)local D;if type(E)=="string"then return H(b.Pattern.create_linear,E)elseif type(E)~="table"then error("Wrong argument type: "..type(E))end;D=b.Pattern.create_linear(E.from[1],E.from[2],E.to[1],E.to[2])C(D,E.stops)return D end;function e.create_radial_pattern(E)local D;if type(E)=="string"then return H(b.Pattern.create_radial,E)elseif type(E)~="table"then error("Wrong argument type: "..type(E))end;D=b.Pattern.create_radial(E.from[1],E.from[2],E.from[3],E.to[1],E.to[2],E.to[3])C(D,E.stops)return D end;e.types={solid=e.create_solid_pattern,png=e.create_png_pattern,linear=e.create_linear_pattern,radial=e.create_radial_pattern}function e.create_pattern_uncached(g)if b.Pattern:is_type_of(g)then return g end;g=g or"#000000"if type(g)=="string"then local M=string.match(g,"[^:]+")if e.types[M]then local N=string.len(M)local E=string.sub(g,N+2)return e.types[M](E)end elseif type(g)=="table"then local M=g.type;if e.types[M]then return e.types[M](g)end end;return e.create_solid_pattern(g)end;function e.create_pattern(g)if b.Pattern:is_type_of(g)then return g end;return f:get(g or"#000000")end;function e.create_opaque_pattern(g)local v=e.create_pattern(g)local O=v:get_type()if O=="SOLID"then local F,F,F,F,P=v:get_rgba()if P~=1 then return end;return v elseif O=="SURFACE"then local Q,R=v:get_surface()if Q~="SUCCESS"or R.content~="COLOR"then return end;if v:get_extend()=="NONE"then return end;return v elseif O=="LINEAR"then local F,S=v:get_color_stop_count()if S==0 or v:get_extend()=="NONE"then return end;for T=0,S-1 do local F,F,F,F,F,P=v:get_color_stop_rgba(T)if P~=1 then return end end;return v end end;function e.recolor_image(u,U)if type(u)=='string'then u=d.duplicate_surface(u)end;local V=b.Context.create(u)V:set_source(e.create_pattern(U))V:mask(b.Pattern.create_for_surface(u),0,0)return u end;function e.ensure_pango_color(W,X)W=tostring(W)local Y=#W;if string.match(W,"^#%x+$")and(Y==5 or Y==9 or Y==17)then return W end;return c.Color.parse(c.Color(),W)and W or X or"black"end;function e.mt.__call(F,...)return e.create_pattern(...)end;f=require("my.gears.cache").new(e.create_pattern_uncached)e.transparent=e.create_pattern("#00000000")return setmetatable(e,e.mt)